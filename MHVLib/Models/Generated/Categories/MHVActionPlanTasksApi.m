//
// MHVActionPlanTasksApi.m
// MHVLib
//
// Copyright (c) 2017 Microsoft Corporation. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#import <Foundation/Foundation.h>
#import "MHVRemoteMonitoringClient.h"
#import "MHVJsonSerializer.h"
#import "MHVActionPlanTasksApi.h"
#import "MHVActionPlanTask.h"
#import "MHVActionPlanTaskInstance.h"
#import "MHVActionPlanTaskTrackingResponseActionPlanTaskTracking_.h"
#import "MHVActionPlanTasksResponseActionPlanTaskInstance_.h"
#import "MHVMicrosoftKhronosCloudCommonErrorsErrorResponse.h"
#import "MHVSystemObject.h"
#import "MHVTrackingValidation.h"


@implementation MHVRemoteMonitoringClient (MHVActionPlanTasksApi)

NSString* _Nonnull kMHVActionPlanTasksApiErrorDomain = @"MHVActionPlanTasksApiErrorDomain";
NSInteger kMHVActionPlanTasksApiMissingParamErrorCode = 234513;

#pragma mark - Api Methods

///
/// Delete a task by id
///
///  @param actionPlanTaskId
///
///  @returns MHVSystemObject*
///
- (void)actionPlanTasksDeleteActionPlanTasksByIdWithActionPlanTaskId:(NSString* _Nonnull)actionPlanTaskId
                                                          completion:(void(^_Nonnull)(MHVSystemObject* _Nullable output, NSError* _Nullable error))completion
{
    // verify the required parameter 'actionPlanTaskId' is set
    if (actionPlanTaskId == nil)
    {
        NSParameterAssert(actionPlanTaskId);
        if(completion)
        {
            NSDictionary * userInfo = @{NSLocalizedDescriptionKey : [NSString stringWithFormat:NSLocalizedString(@"Missing required parameter '%@'", nil),@"actionPlanTaskId"] };
            NSError* error = [NSError errorWithDomain:kMHVActionPlanTasksApiErrorDomain code:kMHVActionPlanTasksApiMissingParamErrorCode userInfo:userInfo];
            completion(nil, error);
        }
    }
    
    NSMutableString* resourcePath = [NSMutableString stringWithFormat:@"/ActionPlanTasks/{actionPlanTaskId}"];
    
    NSMutableDictionary *pathParams = [[NSMutableDictionary alloc] init];
    if (actionPlanTaskId != nil)
    {
        pathParams[@"actionPlanTaskId"] = actionPlanTaskId;
    }
    
    NSMutableDictionary* queryParams = [[NSMutableDictionary alloc] init];
    
    NSData *bodyParam = nil;;
    NSMutableDictionary *formParams = [[NSMutableDictionary alloc] init];
    
    [self requestWithPath:resourcePath
               httpMethod:@"DELETE"
               pathParams:pathParams
              queryParams:queryParams
               formParams:formParams
                     body:bodyParam
                  toClass:[MHVSystemObject class]
               completion:completion];
}

///
/// Get a task by id
///
///  @param actionPlanTaskId
///
///  @returns MHVActionPlanTaskInstance*
///
- (void)actionPlanTasksGetActionPlanTaskByIdWithActionPlanTaskId:(NSString* _Nonnull)actionPlanTaskId
                                                      completion:(void(^_Nonnull)(MHVActionPlanTaskInstance* _Nullable output, NSError* _Nullable error))completion
{
    // verify the required parameter 'actionPlanTaskId' is set
    if (actionPlanTaskId == nil)
    {
        NSParameterAssert(actionPlanTaskId);
        if(completion)
        {
            NSDictionary * userInfo = @{NSLocalizedDescriptionKey : [NSString stringWithFormat:NSLocalizedString(@"Missing required parameter '%@'", nil),@"actionPlanTaskId"] };
            NSError* error = [NSError errorWithDomain:kMHVActionPlanTasksApiErrorDomain code:kMHVActionPlanTasksApiMissingParamErrorCode userInfo:userInfo];
            completion(nil, error);
        }
    }
    
    NSMutableString* resourcePath = [NSMutableString stringWithFormat:@"/ActionPlanTasks/{actionPlanTaskId}"];
    
    NSMutableDictionary *pathParams = [[NSMutableDictionary alloc] init];
    if (actionPlanTaskId != nil)
    {
        pathParams[@"actionPlanTaskId"] = actionPlanTaskId;
    }
    
    NSMutableDictionary* queryParams = [[NSMutableDictionary alloc] init];
    
    NSData *bodyParam = nil;;
    NSMutableDictionary *formParams = [[NSMutableDictionary alloc] init];
    
    [self requestWithPath:resourcePath
               httpMethod:@"GET"
               pathParams:pathParams
              queryParams:queryParams
               formParams:formParams
                     body:bodyParam
                  toClass:[MHVActionPlanTaskInstance class]
               completion:completion];
}

///
/// Get a collection of task definitions
///
///  @param actionPlanTaskStatus  (optional)
///
///  @param maxPageSize The maximum number of entries to return per page. Defaults to 1000. (optional)
///
///  @returns MHVActionPlanTasksResponseActionPlanTaskInstance_*
///
- (void)actionPlanTasksGetActionPlanTasksWithActionPlanTaskStatus:(NSString* _Nullable)actionPlanTaskStatus
                                                      maxPageSize:(NSNumber* _Nullable)maxPageSize
                                                       completion:(void(^_Nonnull)(MHVActionPlanTasksResponseActionPlanTaskInstance_* _Nullable output, NSError* _Nullable error))completion
{
    NSMutableString* resourcePath = [NSMutableString stringWithFormat:@"/ActionPlanTasks"];
    
    NSMutableDictionary *pathParams = [[NSMutableDictionary alloc] init];
    
    NSMutableDictionary* queryParams = [[NSMutableDictionary alloc] init];
    if (actionPlanTaskStatus != nil)
    {
        queryParams[@"actionPlanTaskStatus"] = actionPlanTaskStatus;
    }
    if (maxPageSize != nil)
    {
        queryParams[@"maxPageSize"] = maxPageSize;
    }
    
    NSData *bodyParam = nil;;
    NSMutableDictionary *formParams = [[NSMutableDictionary alloc] init];
    
    [self requestWithPath:resourcePath
               httpMethod:@"GET"
               pathParams:pathParams
              queryParams:queryParams
               formParams:formParams
                     body:bodyParam
                  toClass:[MHVActionPlanTasksResponseActionPlanTaskInstance_ class]
               completion:completion];
}

///
/// Patch an update for an action plan task
///
///  @param actionPlanTask
///
///  @returns MHVActionPlanTasksResponseActionPlanTaskInstance_*
///
- (void)actionPlanTasksPatchActionPlanTasksWithActionPlanTask:(MHVActionPlanTaskInstance* _Nonnull)actionPlanTask
                                                   completion:(void(^_Nonnull)(MHVActionPlanTasksResponseActionPlanTaskInstance_* _Nullable output, NSError* _Nullable error))completion
{
    // verify the required parameter 'actionPlanTask' is set
    if (actionPlanTask == nil)
    {
        NSParameterAssert(actionPlanTask);
        if(completion)
        {
            NSDictionary * userInfo = @{NSLocalizedDescriptionKey : [NSString stringWithFormat:NSLocalizedString(@"Missing required parameter '%@'", nil),@"actionPlanTask"] };
            NSError* error = [NSError errorWithDomain:kMHVActionPlanTasksApiErrorDomain code:kMHVActionPlanTasksApiMissingParamErrorCode userInfo:userInfo];
            completion(nil, error);
        }
    }
    
    NSMutableString* resourcePath = [NSMutableString stringWithFormat:@"/ActionPlanTasks"];
    
    NSMutableDictionary *pathParams = [[NSMutableDictionary alloc] init];
    
    NSMutableDictionary* queryParams = [[NSMutableDictionary alloc] init];
    
    NSData *bodyParam = nil;;
    NSMutableDictionary *formParams = [[NSMutableDictionary alloc] init];
    NSString *json = [MHVJsonSerializer serialize:actionPlanTask];
    bodyParam = [json dataUsingEncoding:NSUTF8StringEncoding];
    
    [self requestWithPath:resourcePath
               httpMethod:@"PATCH"
               pathParams:pathParams
              queryParams:queryParams
               formParams:formParams
                     body:bodyParam
                  toClass:[MHVActionPlanTasksResponseActionPlanTaskInstance_ class]
               completion:completion];
}

///
/// Post a new action plan task
///
///  @param actionPlanTask
///
///  @returns MHVSystemObject*
///
- (void)actionPlanTasksPostActionPlanTasksWithActionPlanTask:(MHVActionPlanTask* _Nonnull)actionPlanTask
                                                  completion:(void(^_Nonnull)(MHVSystemObject* _Nullable output, NSError* _Nullable error))completion
{
    // verify the required parameter 'actionPlanTask' is set
    if (actionPlanTask == nil)
    {
        NSParameterAssert(actionPlanTask);
        if(completion)
        {
            NSDictionary * userInfo = @{NSLocalizedDescriptionKey : [NSString stringWithFormat:NSLocalizedString(@"Missing required parameter '%@'", nil),@"actionPlanTask"] };
            NSError* error = [NSError errorWithDomain:kMHVActionPlanTasksApiErrorDomain code:kMHVActionPlanTasksApiMissingParamErrorCode userInfo:userInfo];
            completion(nil, error);
        }
    }
    
    NSMutableString* resourcePath = [NSMutableString stringWithFormat:@"/ActionPlanTasks"];
    
    NSMutableDictionary *pathParams = [[NSMutableDictionary alloc] init];
    
    NSMutableDictionary* queryParams = [[NSMutableDictionary alloc] init];
    
    NSData *bodyParam = nil;;
    NSMutableDictionary *formParams = [[NSMutableDictionary alloc] init];
    NSString *json = [MHVJsonSerializer serialize:actionPlanTask];
    bodyParam = [json dataUsingEncoding:NSUTF8StringEncoding];
    
    [self requestWithPath:resourcePath
               httpMethod:@"POST"
               pathParams:pathParams
              queryParams:queryParams
               formParams:formParams
                     body:bodyParam
                  toClass:[MHVSystemObject class]
               completion:completion];
}

///
/// Put an update for an action plan task
///
///  @param actionPlanTask
///
///  @returns MHVActionPlanTasksResponseActionPlanTaskInstance_*
///
- (void)actionPlanTasksPutActionPlanTasksWithActionPlanTask:(MHVActionPlanTaskInstance* _Nonnull)actionPlanTask
                                                 completion:(void(^_Nonnull)(MHVActionPlanTasksResponseActionPlanTaskInstance_* _Nullable output, NSError* _Nullable error))completion
{
    // verify the required parameter 'actionPlanTask' is set
    if (actionPlanTask == nil)
    {
        NSParameterAssert(actionPlanTask);
        if(completion)
        {
            NSDictionary * userInfo = @{NSLocalizedDescriptionKey : [NSString stringWithFormat:NSLocalizedString(@"Missing required parameter '%@'", nil),@"actionPlanTask"] };
            NSError* error = [NSError errorWithDomain:kMHVActionPlanTasksApiErrorDomain code:kMHVActionPlanTasksApiMissingParamErrorCode userInfo:userInfo];
            completion(nil, error);
        }
    }
    
    NSMutableString* resourcePath = [NSMutableString stringWithFormat:@"/ActionPlanTasks"];
    
    NSMutableDictionary *pathParams = [[NSMutableDictionary alloc] init];
    
    NSMutableDictionary* queryParams = [[NSMutableDictionary alloc] init];
    
    NSData *bodyParam = nil;;
    NSMutableDictionary *formParams = [[NSMutableDictionary alloc] init];
    NSString *json = [MHVJsonSerializer serialize:actionPlanTask];
    bodyParam = [json dataUsingEncoding:NSUTF8StringEncoding];
    
    [self requestWithPath:resourcePath
               httpMethod:@"PUT"
               pathParams:pathParams
              queryParams:queryParams
               formParams:formParams
                     body:bodyParam
                  toClass:[MHVActionPlanTasksResponseActionPlanTaskInstance_ class]
               completion:completion];
}

///
///
///
///  @param trackingValidation
///
///  @returns MHVActionPlanTaskTrackingResponseActionPlanTaskTracking_*
///
- (void)actionPlanTasksValidateActionPlanTasksTrackingWithTrackingValidation:(MHVTrackingValidation* _Nonnull)trackingValidation
                                                                  completion:(void(^_Nonnull)(MHVActionPlanTaskTrackingResponseActionPlanTaskTracking_* _Nullable output, NSError* _Nullable error))completion
{
    // verify the required parameter 'trackingValidation' is set
    if (trackingValidation == nil)
    {
        NSParameterAssert(trackingValidation);
        if(completion)
        {
            NSDictionary * userInfo = @{NSLocalizedDescriptionKey : [NSString stringWithFormat:NSLocalizedString(@"Missing required parameter '%@'", nil),@"trackingValidation"] };
            NSError* error = [NSError errorWithDomain:kMHVActionPlanTasksApiErrorDomain code:kMHVActionPlanTasksApiMissingParamErrorCode userInfo:userInfo];
            completion(nil, error);
        }
    }
    
    NSMutableString* resourcePath = [NSMutableString stringWithFormat:@"/ActionPlanTasks/ValidateTracking"];
    
    NSMutableDictionary *pathParams = [[NSMutableDictionary alloc] init];
    
    NSMutableDictionary* queryParams = [[NSMutableDictionary alloc] init];
    
    NSData *bodyParam = nil;;
    NSMutableDictionary *formParams = [[NSMutableDictionary alloc] init];
    NSString *json = [MHVJsonSerializer serialize:trackingValidation];
    bodyParam = [json dataUsingEncoding:NSUTF8StringEncoding];
    
    [self requestWithPath:resourcePath
               httpMethod:@"POST"
               pathParams:pathParams
              queryParams:queryParams
               formParams:formParams
                     body:bodyParam
                  toClass:[MHVActionPlanTaskTrackingResponseActionPlanTaskTracking_ class]
               completion:completion];
}



@end
