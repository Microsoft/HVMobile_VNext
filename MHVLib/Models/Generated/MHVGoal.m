//
// MHVGoal.m
// MHVLib
//
// Copyright (c) 2017 Microsoft Corporation. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#import "MHVGoal.h"

@implementation MHVGoal

+ (BOOL)shouldValidateProperties
{
    return YES;
}

- (instancetype)init {
    self = [super init];
    if (self) {
        // initialize property's default value, if any
        
    }
    return self;
}

- (id)initWithCoder:(NSCoder *)coder
{
    self = [[MHVGoal alloc] init];
    
    if (self != nil)
    {
        self._id = [coder decodeObjectForKey:@"_id"];
        self.name = [coder decodeObjectForKey:@"name"];
        //self._description = [coder decodeObjectForKey:@"_description"];
        //self.startDate = [coder decodeObjectForKey:@"startDate"];
        //self.endDate = [coder decodeObjectForKey:@"endDate"];
        self.goalType = [coder decodeObjectForKey:@"goalType"];
        //self.recurrenceMetrics = [coder decodeObjectForKey:@"recurrenceMetrics"];
        //self.range = [coder decodeObjectForKey:@"range"];
        //self.additionalRanges = [coder decodeObjectForKey:@"additionalRanges"];
    }
    
    return self;
}

- (void)encodeWithCoder:(NSCoder *)coder
{
    [coder encodeObject:self._id forKey:@"_id"];
    [coder encodeObject:self.name forKey:@"name"];
    //[coder encodeObject:self._description forKey:@"_description"];
    //[coder encodeObject:self.startDate forKey:@"startDate"];
    //[coder encodeObject:self.endDate forKey:@"endDate"];
    [coder encodeObject:self.goalType forKey:@"goalType"];
    //[coder encodeObject:self.recurrenceMetrics forKey:@"recurrenceMetrics"];
    //[coder encodeObject:self.range forKey:@"range"];
    //[coder encodeObject:self.additionalRanges forKey:@"additionalRanges"];
}




/**
 * Maps json key to property name.
 * This method is used by `JSONModel`.
 
 + (JSONKeyMapper *)keyMapper {
 return [[JSONKeyMapper alloc] initWithModelToJSONDictionary:@{ @"_id": @"id", @"name": @"name", @"_description": @"description", @"startDate": @"startDate", @"endDate": @"endDate", @"goalType": @"goalType", @"recurrenceMetrics": @"recurrenceMetrics", @"range": @"range", @"additionalRanges": @"additionalRanges" }];
 }
 */

+ (NSDictionary *)propertyNameMap
{
    static dispatch_once_t once;
    static NSMutableDictionary *names = nil;
    dispatch_once(&once, ^{
        names = [[super propertyNameMap] mutableCopy];
        [names addEntriesFromDictionary:@{
                                          @"_id": @"id",
                                          @"name": @"name",
                                          @"_description": @"description",
                                          @"startDate": @"startDate",
                                          @"endDate": @"endDate",
                                          @"goalType": @"goalType",
                                          @"recurrenceMetrics": @"recurrenceMetrics",
                                          @"range": @"range",
                                          @"additionalRanges": @"additionalRanges"
                                          }];
    });
    return names;
}


+ (NSDictionary *)objectParametersMap
{
    static dispatch_once_t once;
    static NSMutableDictionary *types = nil;
    dispatch_once(&once, ^{
        types = [[super objectParametersMap] mutableCopy];
        [types addEntriesFromDictionary:@{
                                          
                                          @"recurrenceMetrics": [MHVGoalRecurrenceMetrics class],
                                          
                                          @"range": [MHVGoalRange class],
                                          
                                          @"additionalRanges": [MHVGoalRange class]
                                          }];
    });
    return types;
}

/**
 * Indicates whether the property with the given name is optional.
 * If `propertyName` is optional, then return `YES`, otherwise return `NO`.
 * This method is used by `JSONModel`.
 */
+ (BOOL)propertyIsOptional:(NSString *)propertyName {
    
    NSArray *optionalProperties = @[@"_id", @"name", @"_description", @"startDate", @"endDate", @"goalType", @"recurrenceMetrics", @"range", @"additionalRanges"];
    return [optionalProperties containsObject:propertyName];
}

@end
